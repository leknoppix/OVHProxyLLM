version: '3'

services:
  # Service proxy seul avec l'image construite localement
  proxy:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proxy
    restart: always
    ports:
      - "8000:8000"
    environment:
      - OVH_TOKEN_ENDPOINT=${OVH_TOKEN_ENDPOINT}
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - webui_network

  # Service OpenWebUI avec l'image officielle
  openwebui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: openwebui
    restart: always
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://proxy:8000/
      - RAG_EMBEDDING_MODEL=local
      - DISABLE_OLLAMA_STREAMING=true
      - OPENAI_API_KEY=dummy
      - WEBUI_AUTH=false
      - WEBUI_SECRET_KEY=mysecretkey
      - WEBUI_JWT_SECRET_KEY=mysecretkey123456789
      - WEBUI_ALLOW_REGISTRATION=true
      - WEBUI_CORS_ALLOWED_ORIGINS=*
      - OAI_CONFIG_LIST=[{"model":"llama-3-3-70b-instruct:latest","model_max_tokens":4096}]
      - OAI_MAX_TOKENS=4096
      - OPENAI_REQUEST_TIMEOUT=120
      - OPENAI_API_BASE=http://proxy:8000
    volumes:
      - open-webui-data:/app/backend/data
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:8080/health"]
      interval: 15s
      timeout: 5s
      retries: 3
    networks:
      - webui_network
    depends_on:
      - proxy

  # Service combiné WebUI + Proxy (commenté car nous utilisons les services séparés)
  # webui-proxy-combined:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.combined
  #   container_name: webui-proxy-combined
  #   restart: unless-stopped
  #   ports:
  #     - "8000:8000"  # Port pour le proxy
  #     - "3000:3000"  # Port pour Open WebUI
  #   environment:
  #     - OVH_TOKEN_ENDPOINT=${OVH_TOKEN_ENDPOINT}
  #     - WEBUI_AUTH=false
  #     - WEBUI_SECRET_KEY=mysecretkey
  #     - WEBUI_JWT_SECRET_KEY=mysecretkey123456789
  #     - WEBUI_ALLOW_REGISTRATION=true
  #     - WEBUI_CORS_ALLOWED_ORIGINS=*
  #     - NODE_OPTIONS=--max-old-space-size=4096
  #   volumes:
  #     - open-webui-data:/app/open-webui/data
  #     - ./logs:/app/logs
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -s http://localhost:8000/health || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s
  #   networks:
  #     - webui_network
  #   # Définir des limites de ressources appropriées
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 6G
  #       reservations:
  #         memory: 2G

  # Service Cloudflare Tunnel
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: always
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    depends_on:
      - openwebui
    networks:
      - webui_network

volumes:
  open-webui-data:
    name: open-webui-data

networks:
  webui_network:
    driver: bridge 